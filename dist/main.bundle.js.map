{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/global","webpack://battleship/webpack/runtime/publicPath","webpack://battleship/./src/helpers/addClasses.js","webpack://battleship/./src/helpers/createHtmlElement.js","webpack://battleship/./src/helpers/selectElements.js","webpack://battleship/./src/helpers/appendChildren.js","webpack://battleship/./src/appLogic/gameboard.js","webpack://battleship/./src/appLogic/ships.js","webpack://battleship/./src/appLogic/ship.js","webpack://battleship/./src/appLogic/player.js","webpack://battleship/./src/appLogic/game.js","webpack://battleship/./src/components/welcomeForm/welcomeFormAndInitiation.js","webpack://battleship/./src/components/logo/logo.js","webpack://battleship/./src/components/ships/shipSelection.js","webpack://battleship/./src/components/resetGame/resetGame.js","webpack://battleship/./src/components/playerGrid/playergrid.js","webpack://battleship/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export const addClasses = (element, classesArray) => {\r\n  classesArray.forEach((className) => {\r\n    element.classList.add(className)\r\n  })\r\n}\r\n","import { addClasses } from './addClasses'\r\n\r\nexport const createHtmlElement = (tag, id, text, ...classes) => {\r\n  const element = document.createElement(tag)\r\n  if (id) element.id = id\r\n  if (text) element.innerText = text\r\n  if (classes) addClasses(element, classes)\r\n\r\n  return element\r\n}\r\n","export const selectElement = (selector) => {\r\n  const element = document.querySelector(selector)\r\n  return element\r\n}\r\n\r\nexport const selectList = (selector) => {\r\n  const list = [...document.querySelectorAll(selector)]\r\n  return list\r\n}\r\n","export const appendChildren = (parentElement, ...children) => {\r\n  children.forEach((child) => parentElement.appendChild(child))\r\n}\r\n","export class Gameboard {\r\n  constructor() {\r\n    this.size = 10\r\n    this.board = new Array(this.size * this.size).fill(null)\r\n    this.attackedTargets = []\r\n\r\n    this.placeShip = this.placeShip.bind(this)\r\n  }\r\n\r\n  placeShip(ship, x, y, isVertical) {\r\n    const shipCells = []\r\n\r\n    for (let i = 0; i < ship.shipLength; i++) {\r\n      if (isVertical) {\r\n        if (y + (ship.shipLength - 1) <= this.size - 1) {\r\n          shipCells.push(Number(`${y + i}${x}`))\r\n        } else {\r\n          return false\r\n        }\r\n      } else {\r\n        if (x + (ship.shipLength - 1) <= this.size - 1) {\r\n          shipCells.push(Number(`${y}${x + i}`))\r\n        } else {\r\n          return false\r\n        }\r\n      }\r\n    }\r\n\r\n    const canPlaceShip = this.#isValidPlacement(shipCells)\r\n\r\n    canPlaceShip && shipCells.forEach((index) => (this.board[index] = ship))\r\n    return canPlaceShip\r\n  }\r\n\r\n  receiveAttack(x, y) {\r\n    const boardIndex = Number(`${y}${x}`)\r\n    if (this.board[boardIndex] === 'water' || this.attackedTargets.includes(boardIndex)) {\r\n      return { success: false, targetType: null }\r\n    }\r\n\r\n    const targetCoordinates = this.board[boardIndex]\r\n\r\n    if (targetCoordinates !== null && targetCoordinates !== 'water') {\r\n      targetCoordinates.hit()\r\n      this.attackedTargets.push(boardIndex)\r\n      return { success: true, targetType: 'ship', targetIndex: boardIndex }\r\n    } else {\r\n      this.board[boardIndex] = 'water'\r\n      this.attackedTargets.push(boardIndex)\r\n      return { success: true, targetType: 'water', targetIndex: boardIndex }\r\n    }\r\n  }\r\n\r\n  #isValidPlacement(shipCells) {\r\n    return shipCells.every((index) => this.board[index] === null)\r\n  }\r\n\r\n  reportSunk() {\r\n    const shipCells = this.board.filter((cell) => cell !== 'water' && cell !== null)\r\n    return shipCells.every((ship) => ship.isSunk())\r\n  }\r\n\r\n  resetBoard() {\r\n    this.board = this.board.map((_cell) => null)\r\n    this.attackedTargets = []\r\n  }\r\n}\r\n","export const ships = [\r\n  { type: 'Carrier', length: 5 },\r\n  { type: 'Battleship', length: 4 },\r\n  { type: 'Cruiser', length: 3 },\r\n  { type: 'Submarine', length: 3 },\r\n  { type: 'Destroyer', length: 2 }\r\n]\r\n","export class Ship {\r\n  constructor(length) {\r\n    if (length < 1) {\r\n      throw new Error('Ship length must be greater than 0.')\r\n    }\r\n    this.shipLength = length\r\n    this.hits = 0\r\n  }\r\n\r\n  hit() {\r\n    if (!this.isSunk()) {\r\n      this.hits += 1\r\n    }\r\n  }\r\n\r\n  isSunk() {\r\n    return this.hits === this.shipLength\r\n  }\r\n}\r\n","import { Gameboard } from './gameboard'\r\nimport { ships } from './ships'\r\nimport { Ship } from './ship'\r\n\r\nexport class Player {\r\n  constructor(name) {\r\n    this.name = name\r\n    this.board = new Gameboard()\r\n    this.isActive = false\r\n  }\r\n\r\n  toggleActive() {\r\n    this.isActive = !this.isActive\r\n  }\r\n\r\n  placeRandomShips() {\r\n    for (const shipType of ships) {\r\n      let placedShip = false\r\n      while (!placedShip) {\r\n        const x = Math.floor(Math.random() * this.board.size)\r\n        const y = Math.floor(Math.random() * this.board.size)\r\n        const shipLength = shipType.length\r\n        const ship = new Ship(shipLength)\r\n        const orientation = Math.random() < 0.5\r\n        placedShip = this.board.placeShip(ship, x, y, orientation)\r\n      }\r\n    }\r\n  }\r\n\r\n  randomAttack() {\r\n    let attackWasSuccessful = { success: false }\r\n    while (!attackWasSuccessful.success) {\r\n      const x = Math.floor(Math.random() * this.board.size)\r\n      const y = Math.floor(Math.random() * this.board.size)\r\n      attackWasSuccessful = this.board.receiveAttack(x, y)\r\n    }\r\n    this.toggleActive()\r\n    return attackWasSuccessful\r\n  }\r\n}\r\n","import { Player } from './player'\r\nimport { ships } from './ships'\r\n\r\nexport class Game {\r\n  constructor(player1) {\r\n    this.player1 = new Player(player1)\r\n    this.orientation = false\r\n\r\n    this.player2 = new Player('Computer')\r\n\r\n    this.selectedShip = ships[0]\r\n\r\n    this.player2.placeRandomShips()\r\n  }\r\n\r\n  changeOrientation() {\r\n    this.orientation = !this.orientation\r\n  }\r\n\r\n  nextShip() {\r\n    const currentShipIndex = ships.indexOf(this.selectedShip)\r\n    this.selectedShip = ships[currentShipIndex + 1]\r\n  }\r\n\r\n  resetGame() {\r\n    this.player1.board.resetBoard()\r\n    this.player2.board.resetBoard()\r\n    this.selectedShip = ships[0]\r\n    this.orientation = false\r\n    this.player2.placeRandomShips()\r\n  }\r\n}\r\n","import { appendChildren } from '../../helpers/appendChildren'\r\nimport { createHtmlElement } from '../../helpers/createHtmlElement'\r\nimport { selectElement } from '../../helpers/selectElements'\r\nimport { Game } from '../../appLogic/game'\r\nimport { playerGrid } from '../playerGrid/playergrid'\r\nimport { shipSelection } from '../ships/shipSelection'\r\nimport './welcomeFormAndInitiation.scss'\r\n\r\nexport let game\r\n\r\nexport const welcomeForm = (id) => {\r\n  const main = selectElement('#main')\r\n  const form = createHtmlElement('form', 'create-player')\r\n  const label = createHtmlElement('label', '', \"What's your name Admiral?\")\r\n  const input = createHtmlElement('input', id)\r\n  const button = createHtmlElement('button', 'submit', 'Start')\r\n\r\n  form.setAttribute('novalidate', true)\r\n  label.setAttribute('for', id)\r\n  input.type = 'text'\r\n  input.name = id\r\n\r\n  appendChildren(main, form)\r\n  appendChildren(form, label, input, button)\r\n\r\n  form.addEventListener('submit', (event) => createPlayer1(form, event, input.value))\r\n}\r\n\r\nconst createPlayer1 = (form, event, player1Name) => {\r\n  event.preventDefault()\r\n  game = new Game(player1Name)\r\n\r\n  form.remove()\r\n  playerGrid('placeShips', game.player1.board.board)\r\n  shipSelection()\r\n}\r\n","import { createHtmlElement } from '../../helpers/createHtmlElement.js'\r\nimport { selectElement } from '../../helpers/selectElements.js'\r\nimport { appendChildren } from '../../helpers/appendChildren.js'\r\nimport Logo from '../../assets/icons/logo.svg'\r\nimport './logo.scss'\r\n\r\nexport const logoComponent = () => {\r\n  const header = selectElement('#header')\r\n  const logo = createHtmlElement('img', null, null, 'logo')\r\n  const pageTitle = createHtmlElement('h1', null, 'Battleship', 'page-title')\r\n\r\n  logo.src = Logo\r\n\r\n  appendChildren(header, logo, pageTitle)\r\n}\r\n","import { appendChildren } from '../../helpers/appendChildren'\r\nimport { createHtmlElement } from '../../helpers/createHtmlElement'\r\nimport { selectElement } from '../../helpers/selectElements'\r\nimport { game } from '../welcomeForm/welcomeFormAndInitiation'\r\nimport './shipSelection.scss'\r\n\r\nexport const shipSelection = () => {\r\n  const aside = selectElement('#aside')\r\n  aside.innerHtml = ''\r\n  const currentShip = game.selectedShip\r\n\r\n  const label = createHtmlElement('label', '', currentShip.type)\r\n\r\n  label.setAttribute('for', currentShip.type)\r\n  const container = createHtmlElement('div', currentShip.type, '', 'ship-selector', !game.orientation && 'horizontal')\r\n\r\n  let counter = 0\r\n\r\n  while (counter < currentShip.length) {\r\n    const cell = createHtmlElement('div', '', '', 'select-ship-cell')\r\n\r\n    appendChildren(container, cell)\r\n    counter++\r\n  }\r\n\r\n  appendChildren(aside, label, container)\r\n\r\n  const messages = selectElement('#messages')\r\n  messages.innerText = `Place your ${currentShip.type} by clicking on the grid`\r\n\r\n  const button = createHtmlElement('button', 'swap', 'Swap orientation')\r\n  button.addEventListener('click', () => {\r\n    game.changeOrientation()\r\n    container.classList.toggle('horizontal')\r\n  })\r\n  appendChildren(aside, button)\r\n}\r\n","import { appendChildren } from '../../helpers/appendChildren'\r\nimport { createHtmlElement } from '../../helpers/createHtmlElement'\r\nimport { selectElement, selectList } from '../../helpers/selectElements'\r\nimport { shipSelection } from '../ships/shipSelection'\r\nimport { game } from '../welcomeForm/welcomeFormAndInitiation'\r\nimport { playerGrid } from '../playerGrid/playergrid'\r\nimport './resetGame.scss'\r\n\r\nexport const resetGame = () => {\r\n  const container = createHtmlElement('div', 'reset-container')\r\n  const button = createHtmlElement('button', 'reset-game', 'Play again')\r\n  const header = selectElement('#header')\r\n\r\n  button.addEventListener('click', () => {\r\n    game.resetGame()\r\n    shipSelection()\r\n    const grids = selectList('.grid-container')\r\n    grids.forEach((grid) => grid.remove())\r\n    playerGrid('placeShips', game.player1.board.board)\r\n    button.remove()\r\n  })\r\n  appendChildren(container, button)\r\n  appendChildren(header, container)\r\n}\r\n","import { appendChildren } from '../../helpers/appendChildren'\r\nimport { createHtmlElement } from '../../helpers/createHtmlElement'\r\nimport { selectElement } from '../../helpers/selectElements'\r\nimport { game } from '../welcomeForm/welcomeFormAndInitiation'\r\nimport { Ship } from '../../appLogic/ship'\r\nimport './playerGrid.scss'\r\nimport { shipSelection } from '../ships/shipSelection'\r\nimport { resetGame } from '../resetGame/resetGame'\r\n\r\nexport const playerGrid = (id, board) => {\r\n  const container = selectElement('#playing-grids')\r\n  const gridContainer = createHtmlElement('div', '', '', 'grid-container')\r\n  const grid = createHtmlElement('div', id, '', 'grid')\r\n  const gridLabel = createHtmlElement('p', '', '', 'grid-label')\r\n  id === 'placeShips' &&\r\n    board.forEach((target, index) => {\r\n      const cell = cellComponent(index, id)\r\n      if (target !== null && target === 'water') {\r\n        cell.innerText = 'X'\r\n        cell.classList.add('water')\r\n      }\r\n\r\n      if (target !== null && target !== 'water') {\r\n        cell.innerText = 'O'\r\n      }\r\n      gridLabel.id = 'player-grid-label'\r\n      gridLabel.innerText = `Admiral ${game.player1.name}'s waters`\r\n      selectElement('#player')\r\n      appendChildren(grid, cell)\r\n    })\r\n\r\n  id === 'enemyGrid' &&\r\n    board.forEach((_target, index) => {\r\n      const cell = cellComponent(index, id)\r\n      gridLabel.innerText = 'Enemy waters'\r\n      appendChildren(grid, cell)\r\n    })\r\n\r\n  appendChildren(container, gridContainer)\r\n  appendChildren(gridContainer, gridLabel, grid)\r\n}\r\n\r\nconst cellComponent = (index, type) => {\r\n  const cell = createHtmlElement('div', '', '', 'cell')\r\n  const x = index.toString().length === 1 ? `${index.toString()}` : `${index.toString()[1]}`\r\n  const y = index.toString().length === 1 ? '0' : `${index.toString()[0]}`\r\n\r\n  cell.dataset.x = x\r\n  cell.dataset.y = y\r\n\r\n  type === 'placeShips' &&\r\n    cell.addEventListener('click', () => {\r\n      const selectedShip = game.selectedShip\r\n      const gameOrientation = game.orientation\r\n      const placedShip = game.player1.board.placeShip(new Ship(selectedShip.length), +cell.dataset.x, +cell.dataset.y, gameOrientation)\r\n\r\n      if (placedShip) {\r\n        const label = selectElement(`label[for=\"${selectedShip.type}\"]`)\r\n        const selectShipUi = document.getElementById(`${selectedShip.type}`)\r\n        const grid = selectElement('.grid-container')\r\n        label.remove()\r\n        selectShipUi.remove()\r\n        grid.remove()\r\n        playerGrid('placeShips', game.player1.board.board)\r\n        if (selectedShip.type === 'Destroyer') {\r\n          selectElement('#swap').remove()\r\n          playerGrid('enemyGrid', game.player2.board.board)\r\n          selectElement('#placeShips').style.pointerEvents = 'none'\r\n          const messages = selectElement('#messages')\r\n          messages.innerText = 'Take aim and attack the enemy'\r\n        } else {\r\n          game.nextShip()\r\n          selectElement('#swap').remove()\r\n          shipSelection()\r\n        }\r\n      }\r\n    }),\r\n    (cell.id = index)\r\n\r\n  type === 'enemyGrid' &&\r\n    cell.addEventListener('click', () => {\r\n      game.player1.toggleActive()\r\n      const messages = selectElement('#messages')\r\n\r\n      const successFulAttack = game.player2.board.receiveAttack(+cell.dataset.x, +cell.dataset.y)\r\n\r\n      if (successFulAttack.success) {\r\n        successFulAttack.targetType === 'ship' ? cell.classList.add('hit') : cell.classList.add('water')\r\n        cell.innerText = successFulAttack.targetType === 'ship' ? 'O' : 'X'\r\n        messages.innerText = successFulAttack.targetType === 'ship' ? \"You hit the enemy's ship\" : 'Your missile landed in water'\r\n      }\r\n\r\n      const sunkenShips = game.player2.board.reportSunk()\r\n\r\n      const enemyGrid = selectElement('#enemyGrid')\r\n      enemyGrid.classList.add('inactive')\r\n\r\n      if (sunkenShips) {\r\n        messages.innerText = \"You've sunken all enemy ships\"\r\n        resetGame()\r\n        return\r\n      }\r\n      setTimeout(() => {\r\n        messages.innerText = 'Enemy is taking aim'\r\n      }, 1500)\r\n\r\n      setTimeout(() => {\r\n        const aiAttack = game.player1.randomAttack()\r\n        if (aiAttack.success) {\r\n          const targetCell = document.getElementById(`${aiAttack.targetIndex}`)\r\n          aiAttack.targetType === 'ship' ? targetCell.classList.add('hit') : targetCell.classList.add('water')\r\n          targetCell.innerText = aiAttack.targetType === 'ship' ? 'O' : 'X'\r\n          messages.innerText = aiAttack.targetType === 'ship' ? 'The enemy managed to hit you' : 'Enemy missile landed in water'\r\n        }\r\n\r\n        const sunkenShipsPlayer = game.player1.board.reportSunk()\r\n\r\n        if (sunkenShipsPlayer) {\r\n          enemyGrid.classList.add('inactive')\r\n          messages.innerText = 'The enemy has sunken all your ships!'\r\n          resetGame()\r\n          return\r\n        } else {\r\n          setTimeout(() => {\r\n            enemyGrid.classList.remove('inactive')\r\n            messages.innerText = 'Take aim and attack the enemy'\r\n          }, 1000)\r\n        }\r\n      }, 2500)\r\n    })\r\n\r\n  return cell\r\n}\r\n","'use strict'\r\n\r\nimport { logoComponent } from './components/logo/logo'\r\n\r\nimport './styles/globals.scss'\r\nimport { welcomeForm } from './components/welcomeForm/welcomeFormAndInitiation'\r\n\r\nlogoComponent()\r\nwelcomeForm('player-one-name')\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","createHtmlElement","tag","id","text","element","createElement","innerText","_len","arguments","classes","Array","_key","classesArray","forEach","className","classList","add","addClasses","selectElement","selector","querySelector","appendChildren","parentElement","children","child","appendChild","Gameboard","_classCallCheck","_classPrivateMethodInitSpec","_isValidPlacement","size","board","fill","attackedTargets","placeShip","bind","key","value","ship","x","y","isVertical","_this","shipCells","shipLength","push","Number","concat","canPlaceShip","_classPrivateMethodGet","_isValidPlacement2","call","index","boardIndex","includes","success","targetType","targetCoordinates","hit","targetIndex","filter","cell","every","isSunk","map","_cell","_this2","ships","type","Ship","hits","Player","name","isActive","_step","_iterator","_createForOfIteratorHelper","s","n","done","shipType","placedShip","Math","floor","random","orientation","err","f","attackWasSuccessful","receiveAttack","toggleActive","game","header","logo","pageTitle","main","form","label","input","button","Game","player1","player2","selectedShip","placeRandomShips","currentShipIndex","indexOf","resetBoard","shipSelection","aside","innerHtml","currentShip","setAttribute","container","counter","addEventListener","changeOrientation","toggle","resetGame","_toConsumableArray","querySelectorAll","grid","remove","playerGrid","gridContainer","gridLabel","target","cellComponent","_target","toString","dataset","gameOrientation","selectShipUi","getElementById","style","pointerEvents","nextShip","messages","successFulAttack","sunkenShips","reportSunk","enemyGrid","setTimeout","aiAttack","randomAttack","targetCell","createPlayer1","event","player1Name","preventDefault","Logo"],"sourceRoot":""}